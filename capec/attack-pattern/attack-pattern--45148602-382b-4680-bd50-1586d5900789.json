{
    "type": "bundle",
    "id": "bundle--848132e2-8a89-49ac-80a1-03c03a61a1f6",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--45148602-382b-4680-bd50-1586d5900789",
            "created_by_ref": "identity--31f421d4-bb36-4dbf-9dfc-c116a91de14b",
            "created": "2018-03-06T17:19:03.823Z",
            "modified": "2018-03-06T17:19:03.823Z",
            "name": "Forced Integer Overflow",
            "description": "This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/92.html",
                    "external_id": "CAPEC-92"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/190.html",
                    "external_id": "CWE-190"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/128.html",
                    "external_id": "CWE-128"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/120.html",
                    "external_id": "CWE-120"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/122.html",
                    "external_id": "CWE-122"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/196.html",
                    "external_id": "CWE-196"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/680.html",
                    "external_id": "CWE-680"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html",
                    "external_id": "CWE-697"
                }
            ],
            "object_marking_refs": [
                "marking-definition--b345b2a9-b539-4d88-8a9a-1ebcc9f77507"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Run Arbitrary Code": "Execute unauthorized code or commands"
            },
            "x_capec_example_instances": [
                "Integer overflow in the ProcAuWriteElement function in server/dia/audispatch.c in Network Audio System (NAS) before 1.8a SVN 237 allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a large max_samples value.",
                "The following code illustrates an integer overflow. The declaration of total integer as \"unsigned short int\" assumes that the length of the first and second arguments fits in such an integer.\n\tinclude <stdlib.h>\n\tinclude <string.h>\n\tinclude <stdio.h>\n\t\n\tint main (int argc, char *const *argv)\n\t{\n\t}\n[R.92.4], [R.92.5]"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The attacker can manipulate the value of an integer variable utilized by the target host.",
                "The target host does not do proper range checking on the variable before utilizing it.",
                "When the integer variable is incremented or decremented to an out of range value, it gets a very different value (e.g. very small or negative number)"
            ],
            "x_capec_skills_required": {
                "An attacker can simply overflow an integer by inserting an out of range value.": "Low",
                "Exploiting a buffer overflow by injecting malicious code into the stack of a software system or even the heap can require a higher skill level.": "High"
            },
            "x_capec_typical_severity": "High",
            "x_resources_required": ""
        }
    ]
}
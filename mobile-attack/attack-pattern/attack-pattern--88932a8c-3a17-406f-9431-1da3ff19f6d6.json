{
    "type": "bundle",
    "id": "bundle--b9d1e7cd-4d29-43c6-9e6a-0f97deb0d89a",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--88932a8c-3a17-406f-9431-1da3ff19f6d6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-10-25T14:48:29.092Z",
            "modified": "2018-06-18T15:59:03.864Z",
            "name": "Modify cached executable code",
            "description": "ART (the Android Runtime) compiles optimized code on the device itself to improve performance. If an adversary can escalate privileges, he or she may be able to use those privileges to modify the cached code in order to hide malicious behavior. Since the code is compiled on the device, it may not receive the same level of integrity checks that are provided to code running in the system partition.\n\nSabanal describes the potential use of this technique in  (Citation: Sabanal-ART).",
            "kill_chain_phases": [
                {
                    "phase_name": "persistence",
                    "kill_chain_name": "mitre-mobile-attack"
                }
            ],
            "external_references": [
                {
                    "external_id": "MOB-T1006",
                    "url": "https://attack.mitre.org/mobile/index.php/Technique/MOB-T1006",
                    "source_name": "mitre-mobile-attack"
                },
                {
                    "url": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Sabanal-Hiding-Behind-ART-wp.pdf",
                    "description": "Paul Sabanal. (2015). Hiding Behind ART. Retrieved December 21, 2016.",
                    "source_name": "Sabanal-ART"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_platforms": [
                "Android"
            ]
        }
    ]
}
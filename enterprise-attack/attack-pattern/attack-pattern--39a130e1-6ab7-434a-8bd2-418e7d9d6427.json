{
    "type": "bundle",
    "id": "bundle--5831000d-59fa-4d9d-9b2a-d5fb296b0e70",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:49.119Z",
            "modified": "2018-06-27T14:18:47.700Z",
            "name": "Service Registry Permissions Weakness",
            "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted. (Citation: Twitter Service Recovery Nov 2017)",
            "kill_chain_phases": [
                {
                    "phase_name": "persistence",
                    "kill_chain_name": "mitre-attack"
                },
                {
                    "phase_name": "privilege-escalation",
                    "kill_chain_name": "mitre-attack"
                }
            ],
            "external_references": [
                {
                    "external_id": "T1058",
                    "url": "https://attack.mitre.org/wiki/Technique/T1058",
                    "source_name": "mitre-attack"
                },
                {
                    "url": "https://msdn.microsoft.com/library/windows/desktop/ms724878.aspx",
                    "description": "Microsoft. (n.d.). Registry Key Security and Access Rights. Retrieved March 16, 2017.",
                    "source_name": "MSDN Registry Key Security"
                },
                {
                    "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                    "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                    "source_name": "TechNet Autoruns"
                },
                {
                    "url": "https://twitter.com/r0wdy%20/status/936365549553991680",
                    "description": "The Cyber (@r0wdy_). (2017, November 30). Service Recovery Parameters. Retrieved April 9, 2018.",
                    "source_name": "Twitter Service Recovery Nov 2017"
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "x_mitre_detection": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or {{LinkById|S0075}}. Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted. (Citation: Twitter Service Recovery Nov 2017)",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_data_sources": [
                "Process command-line parameters",
                "Services",
                "Windows Registry"
            ],
            "x_mitre_effective_permissions": [
                "SYSTEM"
            ],
            "x_mitre_permissions_required": [
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_system_requirements": [
                "Ability to modify service values in the Registry"
            ],
            "x_mitre_contributors": [
                "Matthew Demaske, Adaptforward",
                "Travis Smith, Tripwire"
            ]
        }
    ]
}